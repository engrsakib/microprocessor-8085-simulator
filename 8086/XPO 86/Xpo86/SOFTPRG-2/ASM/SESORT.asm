;SORT GIVEN SET OF DATAPOINTS USING SELECTION SORT. 
;SORTING IS IN DESCENDING ORDER i.e. LARGEST ELEMENT ON TOP
;SMALLEST ELEMENT AT BOTTOM

COMSEG SEGMENT
	ASSUME CS:COMSEG, DS:COMSEG, SS:COMSEG, ES:COMSEG
	
	ORG 0100H			;ORG FOR COM STRUCTURED PROGRAMS (ALL SEGMENTS IN ONE SEGMENT
						;AND PROGRAM MAXIMUM SIZE 64KBYTES.)
	
START:
	JMP SKIP_DATA		;SKIP OVER DATA DECLARATIONS

;--------------DEFINE DATA SIZES AND NAMES--------	

TABLE DW 87H,98H,12H,43H
COUNT DW 4
NEWC  DW ?
;--------------END OF DATA DEFINITION-------------

SKIP_DATA:
	MOV AX,10FFH
	MOV SP,AX
	
	MOV AX,0000H
	MOV SS,AX
	MOV ES,AX
	
	PUSH CS
	POP DS
	
	NOP
	NOP
	NOP	

	MOV DX,COUNT	;TOTAL NUMBER OF DATA POINTS.
    DEC DX          ;DX=3 NO OF PASSES REQUIRED 
    MOV NEWC,0 
OUTLUP: 
    MOV CX,DX       ;CX=NO OF COMPARISIONS TO BE PERFORMED IN A PASS 
    MOV SI,0 
    MOV AX,TABLE[SI] ;GET THE FIRST ELEMENT TO SORT.
    MOV BX,SI 
INLUP: 
    INC SI     			;POINT TO THE NEXT ELEMENT TO BE SORTED.
    INC SI
    INC NEWC 	;INCREMENT COUNTER
    CMP AX,TABLE[SI] 	;PERFORM THE COMPARISON.
    JB GO_ON 					;IF ELEMENT BELOW THE NEXT IN TABLE CONTINUE
    MOV AX,TABLE[SI]    ;AH=SMALLEST ELEMENT IN THE VECTOR 
    MOV BX,SI       ;BX=POSITION OF THE SMALLEST ELEMENT 
GO_ON: 
    LOOP INLUP      ;UNTILL CX=0 
    XCHG AX,TABLE[SI]   ;XCHG THE LAST ELEMENT POINTED BY SI,WITH THE 
    MOV TABLE[BX],AX    ;SMALLEST ELEMENT POINTED BY BX 
    DEC DX 
    JNZ OUTLUP   
	INT 0A5H
	
COMSEG ENDS
END START
	
	