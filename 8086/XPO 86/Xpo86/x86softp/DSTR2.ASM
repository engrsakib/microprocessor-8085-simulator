        PAGE 70

  TITLE -- DATA STRING TO 2'S COMPLIMENT.

;THIS PROG. CONVERTS A DATA STRING
;FROM SOURCE ADDRESS 0000H:[1000H] TO
;ITS 2'S COMPLIMENT & STORES THE RESULT TO
;DESTINATION ADDRESS AT 0000H:[1200H]
;NO. OF BYTES IN STRING MUST BE LESS THAN
;01FF H TO AVOID CLASH BETWEEN SOURCE &
;DESTINATION
;
;0000H:[1000H ...] SOURCE STRING
;0000H:[1200H ...] DESTINATION STRING
;            2'S COMPLIMENT OF SOURCE.
;
;REG.USED/DESTROYED :- AX,CX,SI,DI ETC.
;MEM. LOCATIONS MODIFIED :- 1200H....
;
;COMMON SCRATCH PAD AREA ALLOTED :-
;SEG.=0000H, ADDR.=1000H ONWARDS.
;ie 0000:1000 H ONWARDS.
; 
; INPUT TO THE PROG. :-
; SOURCE STRING
;  SEG 0000H
;  ADDR        DATA
; [1000 H] -- DATA BYTE 1
; [1001 H] -- DATA BYTE 2
;   |          |
;
; OUTPUT OF THE PROG. :-
; DESTINATION STRING
;   SEG 0000H
;   ADDR       DATA
; [1200 H] -- 2'S COMPLI. OF DATA BYTE 1
; [1201 H] -- 2'S COMPLI. OF DATA BYTE 2
;   |          |

        DSTR2  SEGMENT
        ASSUME CS:DSTR2, DS:DSTR2
        ASSUME ES:DSTR2
; 'ASSUME' IS AN ASSEMBLER DIRECTIVE. IT HAS
; NOTHING TO DO WITH 8086. IT IS ONLY USED
; TO TELL THE ASSEMBLER (MASM), WHERE THE
; CODE, DATA, STACK ETC. IS LOCATED.
; IT IS ONLY A FORMALITY FOR MASM.

SCPD     EQU 0000H ; SCRATCH PAD SEGMENT.
ADR_SRC  EQU 1000H ; ADDRESS OF INPUT STRING.
ADR_DST  EQU 1200H ; ADDRESS OF DESTINATION.
BYTENO   EQU 0064H ; NO. OF BYTES IN STRING.
                   ; ( BLK LENGTH < 01FFH )

ORG 100H       ;COM FORMAT IS RECOMMENDED.

STRT:
JMP SKIP_DATA  ;SKIP LOOK UP/DATA BASES IF ANY

;ON KIT YOU NEED TO DO INIT FOR SP TO SEPARATE
;STACK OF YOUR PROGRAME FROM MONITORS, DS AS
;SHOWN BELOW.SS,ES ARE SET TO 0000 AT POWER ON
;BY MONITOR. YOU CAN OFCOURSE CHANGE IT BY
;ADDING A FEW MORE MOVES. BUT WHILE WORKING ON
;PC YOU CAN`T TOUCH SEGMENT REGISTERS SINCE
;THEY ARE SET BY DOS LOADER,SO MANAGE THESE
;INSTRUCTIONS AS SHOWN IN COMMENT FIELD.

SKIP_DATA:
MOV AX,10FFH    ; INIT OF SP FOR KIT
MOV  SP,AX      ; <-- MOV AX,AX  ON PC
PUSH CS         ; INIT FOR DS
POP DS          ;
NOP             ; TO LOAD KIT INTERRUPTS
NOP             ; (A0-BF) IN PC
NOP             ; REPLACE THE 3 NOPS
; CALL LDINPC   ; WITH THIS CALL.
MOV AX,SCPD     ; TO SPECIFY SCPD LOCn ON KIT.
NOP             ; <-- MOV AX,CS  ON PC
MOV ES,AX       ;
MOV SI,ADR_SRC  ; ADDR. OF SOURCE DATA STRING.
MOV DI,ADR_DST  ; ADDR. OF DESTINATION.
MOV CX,BYTENO   ; STRING LENGTH IN CX
LUP1:           ;
MOV AL,ES:[SI]  ; TAKE BYTE FROM SOURCE STRING
NEG AL          ; CONVERT TO 2'S COMPLIMENT.
MOV ES:[DI],AL  ; STORE AT DESTINATION
INC DI          ;
INC SI          ; POINTERS TO NEXT BYTE.
LOOP LUP1       ;
INT 0A3H        ; GOTO COMMAND = MODE ON KIT.
                ; ON PC RETURN TO DOS.
                ; IF YOU ARE RUNNING YOUR
                ; SOFTWARE ON PC INSERT HERE
                ; INCLUDE KIT_INTS.ASM
                ; *******************
                                
DSTR2 ENDS     ; READ FOR MORE INFO TITLE OF
      END STRT ; KIT_INTS.ASM

