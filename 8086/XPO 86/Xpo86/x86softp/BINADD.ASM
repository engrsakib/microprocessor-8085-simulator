        PAGE 70

  TITLE -- 16 BIT BINARY ADDITION.

;THIS PROG. ADDS TWO 16 BIT BINARY NOS.
;FIRST NO.IS AT ADDRESS 000H:[1000H,1001H]
;& SECOND NO. IS AT 0000H:[1010H TO 1011H]
;THE RESULT WILL BE STOREDB TO DESTINATION
;ADDR 0000H:[1050 H TO 1052 H].
; [1001 H] [1000 H] FIRST NO.
;+
; [1011 H] [1010 H] SECOND NO.
;------------------------------
; [1051 H] [1050 H]  RESULT
; [1052 H] CARRY
;
;REG.USED/DESTROYED :- AX,CX,SI,DI ETC.
;MEM. LOCATIONS MODIFIED :- 1050 H TO 1052 H.
;
;COMMON SCRATCH PAD AREA ALLOTED :-
;SEG.=0000H, ADDR.=1000H ONWARDS.
;ie 0000:1000 H ONWARDS.
; 
; INPUT TO THE PROG. :-
;  SEG 0000H
;  ADDR        DATA
; [1000 H] -- LOWER BYTE OF FIRST NO.
; [1001 H] -- HIGHER BYTE OF FIRST NO.
;
; [1010 H] -- LOWER BYTE OF SECOND NO.
; [1011 H] -- HIGHER BYTE OF SECOND NO.
;
; OUTPUT OF THE PROG. :-
;   SEG 0000H
;   ADDR        DATA
; [1050 H] -- LOWER BYTE OF RESULT.
; [1051 H] -- HIGHER BYTE OF RESULT.
; [1052 H] -- IF CARRY THEN 01 H ELSE 00

        BINADD  SEGMENT
        ASSUME CS:BINADD, DS:BINADD
        ASSUME ES:BINADD
; 'ASSUME' IS AN ASSEMBLER DIRECTIVE. IT HAS
; NOTHING TO DO WITH 8086. IT IS ONLY USED
; TO TELL THE ASSEMBLER (MASM) WHERE THE
; CODE, DATA, STACK ETC. IS LOCATED.
; IT IS ONLY A FORMALITY FOR MASM.

SCPD     EQU 0000H ; SCRATCH PAD SEGMENT.
ADR_1NO  EQU 1000H ; ADDRESS OF 1st NO.
ADR_2NO  EQU 1010H ; ADDRESS OF 2nd NO.
ADR_RSLT EQU 1050H ; ADDRESS OF RESULT

ORG 100H       ;COM FORMAT IS RECOMMENDED.

STRT:
JMP SKIP_DATA  ;SKIP LOOK UP/DATA BASES IF ANY

;ON KIT YOU NEED TO DO INIT FOR SP TO SEPARATE
;STACK OF YOUR PROGRAME FROM MONITORS, DS AS
;SHOWN BELOW.SS,ES ARE SET TO 0000 AT POWER ON
;BY MONITOR. YOU CAN OFCOURSE CHANGE IT BY
;ADDING A FEW MORE MOVES. BUT WHILE WORKING ON
;PC YOU CAN`T TOUCH SEGMENT REGISTERS SINCE
;THEY ARE SET BY DOS LOADER,SO MANAGE THESE
;INSTRUCTIONS AS SHOWN IN COMMENT FIELD.

SKIP_DATA:
MOV AX,10FFH    ; INIT OF SP FOR KIT
MOV  SP,AX      ; <-- MOV AX,AX  ON PC
PUSH CS         ; INIT FOR DS
POP DS          ;
NOP             ; TO LOAD KIT INTERRUPTS
NOP             ; (A0-BF) IN PC
NOP             ; REPLACE THE 3 NOPS
; CALL LDINPC   ; WITH THIS CALL.
MOV AX,SCPD     ; TO SPECIFY SCPD LOCn ON KIT.
NOP             ; <-- MOV AX,CS  ON PC
MOV ES,AX       ;
MOV SI,ADR_1NO  ; ADDR. OF 1st NO. IN SI.
MOV DI,ADR_2NO  ; ADDR. OF 2nd NO. IN DX.
CLC             ; CLEAR CARRY
MOV AL,ES:[SI]  ; TAKE FIRST BYTE OF NO.1
ADC AL,ES:[DI]  ; ADD TO FIRST BYTE OF NO.2
MOV CL,AL       ; LOWER BYTE OF RESULT IN CL
INC DI          ;
INC SI          ; POINTERS TO HIGHER BYTES.
MOV AL,ES:[SI]  ; TAKE SECOND BYTE OF NO.1
ADC AL,ES:[DI]  ; ADD TO SECOND BYTE OF NO.2
MOV CH,AL       ; HIGHER BYTE OF RESULT IN CH
MOV DI,ADR_RSLT ; ADDR OF RESULT IN DI
MOV ES:[DI],CL  ; STORE RESULT AT GIVEN ADDR
INC DI          ;
MOV ES:[DI],CH  ;
INC DI          ; ADDR OF RESULT CARRY IN DI
MOV AL,00H      ;
MOV ES:[DI],AL  ;
ADC ES:[DI],AL  ; CARRY = [1052 H]
INT 0A3H        ; GOTO COMMAND = MODE ON KIT.
                ; ON PC RETURN TO DOS.
                ; IF YOU ARE RUNNING YOUR
                ; SOFTWARE ON PC INSERT HERE
                ; INCLUDE KIT_INTS.ASM
                ; *******************
                                
BINADD ENDS     ; READ FOR MORE INFO TITLE OF
        END STRT ; KIT_INTS.ASM

