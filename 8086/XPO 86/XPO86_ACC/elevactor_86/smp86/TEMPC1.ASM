PAGE,85
TITLE-- TEMP.CONTROLLER (ADC+RELAY CARD)

;********************************************
;TEMP. CONTROLLER USING RELAY CARD AND
;TEMP. SENSORS INTERFACE MODULES.
;********************************************

;KEEP "SET POINT" VALUE IN MEMORY
;LOCATION ADDRESS 0000:1000H.
;KEEP "LIMIT BAND" VALUE IN MEMORY
;LOCATION ADDRESS 0000:1001H.
;USING "SUBSTITUTE" COMMAND ENTER
;VALUES IN HEXADECIMAL FORM ONLY.

ADC SEGMENT
ASSUME CS:ADC, DS:ADC ,ES:ADC
ORG 100H       ;COM FORMAT IS RECOMMENDED.

STRT:JMP SKIP_DATA ;SKIP LOOK UP/DATA BASES

;ON KIT YOU NEED TO DO INIT FOR SP
;[TO SEPARATE STACK OF YOUR PROGRAME FROM
;MONITORS],DS AS SHOWN BELOW.
;SS,ES ARE SET TO 0000 AT POWER ON BY MONITOR.
;YOU CAN OFCOURSE CHANGE IT
;BY ADDING A FEW MORE MOVE`S.
;BUT WHILE WORKING ON PC YOU CAN`T
;TOUCH SEGMENT REGISTERS SINCE THEY ARE
;SET BY DOS LOADER,SO MANAGE THESE
;INSTRUCTIONS AS SHOWN IN COMMENT FIELD.

DEG: DB "H DEG",03H  ;TEXT DEGREE.

SKIP_DATA:
MOV AX,11FFH    ;INIT OF SP FOR KIT
MOV SP,AX       ;MOV AX,AX   ON PC
MOV AX,0000H    ;SCPD SEG.
NOP             ;FOR PC
MOV ES,AX       ;ES SEG. INIT

PUSH CS   ;THIS IS THE BEST WAY TO LOAD DS
POP AX    ;WITH SEGMENT VALUE.
MOV DS,AX
NOP       ;LOAD KIT INT S (A0-BF) IN PC USING
NOP       ;CALL LDINPC
NOP       ;PLACE ABOVE CALL IN PLACE OF NOP`S
INT 0ACH  ;CLEAR DISPLAY

;UPPER & LOWER LIMIT CALCULATION
;FROM SET POINT & CONTROL BAND.

MOV BL,ES:[1000H] ;SET VALUE
MOV CL,ES:[1001H] ;LIMIT BAND
ADD BL,CL
MOV ES:[1002H],BL ;STORE UPPER LIMIT
MOV BL,ES:[1000H]
MOV CL,ES:[1001H]
SUB BL,CL
MOV ES:[1003H],BL ;STORE LOWER LIMIT

;8255 INITIALISATION & ADC.

MOV AL,92H  ;INIT 8255L A,B-IN.C-OUT.
MOV DX,8807H
OUT DX,AL

MOV AX,8080H ;INIT 8255U ALL O/P
MOV DX,8006H
OUT DX,AX

LOOP01:
MOV DX,8805H ;PORT C=1*010000 SET FOR DIFF,
MOV AL,90H   ;SAMPLE MODE FOR S/H,
OUT DX,AL    ;CH INFO IS RELEVANT IF CONNECT
             ;INSTRU OP AMP MODULE TO ADC
MOV DX,8803H
LOOP02:IN AL,DX ;CHECK STATUS LINE
AND AL,40H      ;CONVERSION REALY BEGUN?
JZ LOOP02

LOOP03:
IN AL,DX    ;NOW CONVERSION REALLY STARTS.
AND AL,40H  ;CONVERSION OVER?
JNZ LOOP03

MOV DX,8805H
IN AL,DX    ;SET CS LOW AND PUT ADC
AND AL,7FH  ;IN HOLD MODE.
OUT DX,AL

MOV DX,8801H
IN AL,DX    ;READ LOWER BYTE
MOV CL,AL

MOV DX,8803H
IN AL,DX    ;READ UPPER BYTE
AND AL,1FH  ;SUPRESS POLARITY & DON`T CARE,
MOV CH,AL   ;SAVE IT

;DIGITAL DATA CONVERTED INTO TEMP. IN DEG.C

MOV BL,001CH ;SCALING FACTOR
MOV AX,CX    ;(1C PT100/A0 TERMOCOUPLE)
DIV BL
MOV CX,AX
MOV ES:[1004H],CL ;STORE TEMP. VALUE.

MOV DL,AL
INT 0ABH     ;CALL CRET-ONLY LINE FEED
JMP SKP3
SKP3:
MOV AL,03H   ;NO. OF DIGITS
MOV DX,0000H
MOV DL,CL    ;RT.HAND JUSTIFIED NO.
INT 0AEH     ;CALL NMOUT

MOV BX,OFFSET DEG ;DISP DEG.
INT 0AFH

;CONTROL OF HEATER & COOLER STARTS HERE.

CNTRL:
MOV AL,ES:[1004H] ;LOAD ACTUAL TEMP IN AX.
MOV CL,ES:[1002H] ;LOAD UPPER LIMIT IN CX.
CMP AL,CL         ;COMP ACT WITH UTP
JAE COOL          ;IF ABOVE THEN COOLER ON

MOV CL,ES:[1003H] ;LOAD UPPER LIMIT IN CX.
CMP AL,CL         ;COMPARE ACT WITH LTP
JNAE HEAT         ;IF BELOW THEN HEATER ON
JMP KEYIN

COOL:
MOV AX,0F0F0H     ;MAKE COOLER ON
MOV DX,8000H
OUT DX,AX
JMP KEYIN

HEAT:
MOV AX,0F0FH      ;MAKE HEATER ON
MOV DX,8000H
OUT DX,AX

KEYIN:
MOV AH,0BH
INT 0A1H     ;CHECK FOR KEY PRESSED.
CMP AL,00H
JZ LOOP01    ;KEY NOT PRESSED,HENCE CONTINUE.
INT 0A3H     ;CMD MODE.



ADC ENDS
END STRT
                                                                              
