 
;MOTOROLA SERIAL LINK ON 8086 SYSTEM.
;THIS IS A DOWN-LOADER PROGRAME FOR THE 'MOTOROLA STANDARD HEX' FILE.
;THIS IS A GOOD EXAMPLE OF HOW TO USE THE INT'S PROVIDED ON 'ANSHUMAN-LC6'
;USER MAY ASSEMBLE THIS PROGRAM USING SERIAL.BAT,DOWNLOAD IT AT 1000:0000
;ON LC-6 KIT AND RUN IT [GO 1000:0100] TO DOWNLOAD A .HEX(MOTOROLA STD) FILE

;[ON KIT YOU NEED TO DO INIT FOR SP [TO SEPARATE STACK OF YOUR PROGRAME FROM
;MONITORS],DS AS SHOWN BELOW.SS,ES ARE SET TO 0000 AT POWER ON BY MONITOR.
;YOU CAN OFCOURSE CHANGE IT BY ADDING A FEW MORE MOVE`S.
;BUT WHILE WORKING ON PC YOU CAN`T TOUCH SEGMENT REGISTERS SINCE THEY ARE
;SET BY DOS LOADER,SO MANAGE THESE INSTRUCTIONS AS SHOWN IN COMMENT FIELD.] 

MOTOR	SEGMENT

	ASSUME CS:MOTOR , DS:MOTOR , ES:MOTOR ,SS:MOTOR

ETX	EQU 03H

	ORG 100H		
 	
BEGIN:	PUSH CS			;INITILIZE PROGRAME
	POP DS
	MOV AX,11F0H
	MOV SP,AX
	MOV AX,0000H
	MOV SS,AX
	MOV ES,AX	
	MOV AH,08H
	CALL GETMN		;GET MAIN HEADER

AGN:	MOV AH,08H
	CALL GETHD		;S0,S1,S9...GET LINE HEADER.
	CALL GETHX		;AL=RCVD HEX NO.=N. A PACKED HEX NO.
	MOV CH,00H
	SUB AL,03H
	MOV CL,AL		;CL-AL=NO OF BYTS IN STRING
	CALL GETHX		;AL=AA=ADDR HGH.
	MOV BH,AL
	CALL GETHX		;AL=AA=ADDR LOW.
	MOV BL,AL
	PUSH BX
	PUSH CX
	MOV BX,OFFSET[DATA]
	INT 0ACH		;SEND CRLF
	INT 0AFH		;SHOW MSG 'DATA'
	POP CX
	POP SI
BK:	CALL GETHX		;GET ACTUAL DATA BYTE 	
	CALL SAV		;SAVE IT NEXT LOCATION 2000:SI
	INC SI
	DEC CX
	JCXZ ON
	JMP BK
ON:	INT 0ACH		;CRLF	
	MOV BX,OFFSET[HEADER]	;SHOW 'HEADER'
	INT 0AFH
	CALL GETHX		;GET CHKSM BYTE.
	MOV AH,08H
	INT 0A8H
	CMP AL,0DH		;GET 'CR'
	JNZ ERRC
	MOV AH,08H
	INT 0A8H
	CMP AL,0AH		;GET 'LF'
	JNZ ERRC
	JMP NEAR PTR AGN
ERRC:	MOV BX,OFFSET[CERROR]	;CR LF ?... ERROR
	PUSH CS
	POP DS
	INT 0ACH
	INT 0AFH
	INT 0A4H		;GOTO COMMAND MODE W/O DISTURBING THE DISP.

SAV:	PUSH CX			;SAVE RECEIVED BYTE AT 2000:SI
	PUSH SI
	MOV CX,2000H		;EXP SOCKET OF 64K BBKP.
	INT 0B0H
	POP SI
	POP CX
	RET

ERRT:	MOV BX,OFFSET[TERROR]	;'HEAD S?' ERROR ,FIRST 'S' MISSING...
	PUSH CS
	POP DS
	INT 0ACH
	INT 0AFH
	INT 0A4H		;GOTO COMMAND MODE.

GETHD:	MOV AH,08H		;GET THE HEADER OF THE LINE.
	INT 0A8H
	CMP AL,53H
	JNZ ERRT
SME:	MOV AH,08H
	INT 0A8H
	CMP AL,31H
	JZ OUT
	CMP AL,39H
	JNZ ERR
	MOV BX,OFFSET[DONE]	;ALL BYTES RECEIVED..SHOW 'DONE' & GOTO	
	PUSH CS			;COMMAND MODE..
	POP DS
	INT 0ACH
	INT 0AFH
	INT 0A4H
OUT:	RET
ERR:	MOV BX,OFFSET[ERROR]	;INVALID HEX FILE..SHOW 'ERROR.	
	PUSH CS
	POP DS
	INT 0ACH
	INT 0AFH
	INT 0A4H

GETMN:	MOV AH,08H		;GET MAIN HEADER OF THE FILE.
	INT 0A8H
	CMP AL,53H
	JNZ GETMN
	MOV AH,08H
	INT 0A8H
	CMP AL,30H
	JNZ SERR
LUP:	MOV AH,08H
	INT 0A8H
	CMP AL,0DH
	JNZ LUP
LUP2:	MOV AH,08H
	INT 0A8H
	CMP AL,0AH
	JNZ LUP2
	RET
SERR:	MOV BX,OFFSET[SERROR]	;'STERROR' STRT'0' MISSING...
	PUSH CS
	POP DS
	INT 0ACH
	INT 0AFH
	INT 0A4H

GETHX:	PUSH DX			;GET ACTUAL HEX BYTE FROM THE LINK.
	PUSH CX
	MOV DL,00H
	CALL ADJ
	MOV CL,04H
	ROL AL,CL
	MOV DL,AL
	CALL ADJ
	OR AL,DL
	POP CX
	POP DX
	RET
	
ADJ:	MOV AH,08H		;CONVERT ASCII TO HEX.
	INT 0A8H
	CMP AL,41H
	JNC UPP
	SUB AL,30H
	RET
UPP:	SUB AL,37H					
	RET
		
	
EVEN

TERROR:	DB "HEAD S ?",ETX	;DIFFERENT ERROR MESSAGES.	
CERROR:	DB "CR LF ?",ETX
HEADER:	DB "HEADER",ETX
DATA:	DB "DATA",ETX	
SERROR:	DB "STERROR",ETX
ERROR:	DB "ERROR",ETX
DONE:	DB "DONE",ETX

;	INCLUDE KIT_INTS.ASM
MOTOR	ENDS
	END BEGIN

;--------------------------------------------------------------------------	


