

 
;[ON KIT YOU NEED TO DO INIT FOR SP [TO SEPARATE STACK OF YOUR PROGRAME FROM
;MONITORS],DS AS SHOWN BELOW.SS,ES ARE SET TO 0000 AT POWER ON BY MONITOR.
;YOU CAN OFCOURSE CHANGE IT BY ADDING A FEW MORE MOVE`S.
;BUT WHILE WORKING ON PC YOU CAN`T TOUCH SEGMENT REGISTERS SINCE THEY ARE
;SET BY DOS LOADER,SO MANAGE THESE INSTRUCTIONS AS SHOWN IN COMMENT FIELD.] 

LIFT	SEGMENT

	ASSUME CS:LIFT , DS:LIFT , ES:LIFT ,SS:LIFT

	ORG 100H		
 	
BEGIN:	PUSH CS			;INITILIZE PROGRAME
	POP DS
	MOV AX,11F0H
	MOV SP,AX
	MOV AX,0000H
	MOV SS,AX
	MOV ES,AX
	MOV DX,8807H
	MOV AL,82H		;PA=O/P,PB=I/P
	OUT DX,AL
	
	MOV AL,00H
	MOV SI,0600H
	MOV CX,060FH
	INT 0BBH		;WRITE ENABLE
	INT 0B1H		;MOV IMMEDIATE
	INT 0BCH		;WRITE DISABLE
	MOV AL,20H
	MOV SI,0602H
	MOV CX,0606H
	INT 0BBH		;WRITE ENABLE
	INT 0B1H		;MOV IMMEDIATE
	MOV SI,OFFSET IMAGE
	MOV DI,0640H
	PUSH DS
	POP ES
	MOV CX,001BH
REP	MOVSB
	
LOOP0:	MOV AL,0FH		;MAIN LOOP.
	MOV DX,8801H
	OUT DX,AL		;LEDS -->NO DIRCTION
	INT 0ABH		;CRET
	MOV BX,0640H		;FLOOR 00
	INT 0AFH
	
LOOP1:	CALL SCAN		;SCAN THE ELV REQUEST,AL=NO,C=1-->INVALID REQ.
	MOV CL,AL		;AH=0..NO REQ,AH=FF..REQ.
	MOV DI,0601H
	MOV [DI],AL		;NEW REQ SAVED IN MEMORY
	JC INVALID
	CMP AH,00		;AH=00..NO REQ.
	JZ NOREQ		;AH=01..NEW REQ.
	CALL CHKDIR		;CHECK THE DIRECTION
	CMP CH,00H		;CH=0..SME FLOOR
	JZ NOREQ
	CMP CH,01H		;CH=1..UP DIRECTION
	JNZ AD
	JMP NEAR PTR UPDIR
AD:	JMP NEAR PTR DNDIR	;CH=02..DOWN DIRCTION
		
NOREQ:	MOV DI,0600H
	MOV AL,[DI]
	ADD AL,30H
	MOV DI,0647H
	MOV [DI],AL
	MOV BX,0640H
	INT 0ABH
	INT 0AFH
	MOV DI,0600H
	MOV AL,[DI]
	CALL CLREQ		;CHK IF MORE THAN ONE REQ.
	MOV DX,8801H
	OUT DX,AL
	JMP CNCALL
		
INVALID:MOV AL,30H		;TWO REQUESTS AT A TIME..IGNORE GO TO 00
	MOV DI,0647H
	MOV [DI],AL
	MOV AL,00H
	MOV DI,0600H
	MOV [DI],AL
	MOV DX,8801H
	OUT DX,AL
	JMP LOOP0		

SCAN:	MOV DX,8803H
	IN AL,DX
	AND AL,0FH
	CMP AL,00H
	JZ A0
	MOV BX,OFFSET FLTBL
	CALL SERCH		;AL=MATCHED NO.IF NC.
	JNC A1			;NC..VALID KEY
	STC			;NO MATCH,MORE THAN ONE REQ
	RET
A1:	MOV AH,01H		;AL=FL NO, NEW,REQ PENDING
	RET		
A0:	MOV AH,00H		;NO REQ.
	CLC 
	RET

CHKDIR:	MOV DI,0600H		;CHECK THE DIRECTION
	MOV AL,[DI]
	MOV AH,AL		;COPY INTO AH
	CMP AL,CL
	JZ SME			;SAME KEY
	JNC NLTO			;NEW<OLD
	MOV CH,01H		;CH=01.. UP DIR
BK:	MOV DI,0607H
	MOV [DI],CH
	RET
SME:	MOV CH,00H		;CH=00..SAME DIR
	JMP BK
NLTO:	MOV CH,02H		;CH=02..DOWN DIR
	JMP BK
			
CNCALL:	MOV DX,8801H		;CANCLE ALL REQUESTS.
	MOV AL,0FH	
	OUT DX,AL
	CALL DELAY		;TIME PASS FOR ELEVATOR
	MOV AH,0BH
	INT 0A1H			;POLL THE CONIN ONCE
	CMP AL,00H
	JNZ AE
	JMP LOOP1
AE:	MOV AH,08H
	INT 0A1H
	CMP AL,1BH		;"ESC"?
	JZ AF
	JMP LOOP1		;NO,CONTINUE..
	INT 0BCH		;WRITE DISABLE
AF:	INT 0A3H		;CMDMOD		

UPDIR:	MOV DI,0606H
A3:	CMP CL,AH
	JC A2
	MOV AL,AH
	ADD AL,30H
	MOV [DI],AL		;IN SEQUENCE FOR UPWARD DIR
	DEC DI
	INC AH
	JMP A3
A2:	MOV DI,0650H
	MOV BX,0649H
	JMP DISP

DNDIR:	MOV DI,0606H
	MOV BL,CL
	MOV BH,AH
A5:	CMP BH,CL
	JC A4
	MOV AL,AH
	ADD AL,30H	
	MOV [DI],AL		;IN SEQ FOR DOWNWARD DIR	
	DEC DI
	INC CL
	DEC AH	
	JMP A5

A4:	MOV DI,0659H
	MOV BX,0652H
DISP:	MOV SI,0606H
A8:	MOV AL,[SI]
	CMP AL,20H
	JZ A6
	MOV [DI],AL
	INT 0AFH
	PUSH DI
	MOV DI,0607H
	MOV AL,[DI]
	POP DI
	CMP AL,01H
	JZ A7
	MOV AL,1FH
A9:	MOV DX,8801H
	OUT DX,AL
	CALL DELAY
	DEC SI
	JMP A8
A7:	MOV AL,8FH
	JMP A9
A6:	MOV DI,0601H
	MOV AL,[DI]
	MOV DI,0600H
	MOV [DI],AL
	CALL CLREQ
	MOV DX,8801H
	OUT DX,AL
	MOV AL,20H	
	MOV SI,0602H
	MOV CX,0606H
	INT 0B1H
	JMP CNCALL

CLREQ:	PUSH BX
	MOV BX,OFFSET RQTBL
	CALL SERCH		;LINSERCH OF AL THRU DS:BX
	JC AA			;C=1..NO MATCH
LS:	POP BX
	RET
AA:	MOV AL,0EH
	JMP LS

SERCH:	PUSH CX			;SEARCH [AL] THRU BLOCK POINTED BY DS:BX
	MOV CL,AL	
BK3:	MOV AL,[BX]
	CMP AL,00H
	JZ NFN
	CMP AL,CL
	JZ FND
	INC BX
	INC BX
	JMP BK3
FND:	INC BX
	MOV AL,[BX]
	CLC
	POP CX
	RET
NFN:	MOV AL,CL
	POP CX
	STC 
	RET

DELAY:	PUSH BX			;TIME PASS...
	PUSH CX
	MOV BL,05H
AC:	MOV CX,0FFFFH
	INT 0AAH
	DEC BL
	JNZ AC
AB:	POP CX
	POP BX
	RET
		
FLTBL:	DB 08H,03H,04H,02H,02H,01H,01H,00H,00H
RQTBL:	DB 03H,07H,02H,0BH,01H,0DH,00H		

IMAGE:	DB "FLOOR 00",03H	;7751-7759
UPMSG:	DB "   UP 00",03H	;775A-7762
DNMSG:	DB " DOWN 00",03H	;7763-776B

;	INCLUDE KIT_INTS.ASM
LIFT	ENDS
	END BEGIN

;--------------------------------------------------------------------------	

